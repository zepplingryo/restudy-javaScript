/**
 * ESmodule是基于静态分析的 在我们下载模块时会基于imp exp语句
 *
 * 首先js文件都是存在于服务器中的
 *
 * 我们要根据地址进行下载解析文件
 *
 * ES Module的解析过程可以划分为三个阶段
 *
 * 1.构建阶段 根据查找js文件路径 并且下载 将其解析为一种数据结构(Module Record)模块记录
 *
 * 2.实力话阶段 对模块记录进行实例化 并且分配内存空间 解析模块的导入和导出语句 把模块只想对应的内存地址、 (静态分析)
 *
 * 3.运行阶段 运行代码 计算值 将值填入道内存地址中 (动态运行阶段)
 */

// 阶段二只会解析下面这一行代码 至于里面的bar函数并不会进行解析
// 阶段二就是一个收集的过程 只会解析export和import语句 并且开辟一块新的内存地址 此时bar函数还是undefined
// 比如说我这里依赖barjs js解析器就会帮我们下载 创建barjs实力话 以此类推
// 其中内部还有一个 Module map 记录哪个已经被下载了哪个没有被下载 如果哪个已经被下载了就不会再进行下载 已经她看到map中已经被下载了 等到下载完毕后继续传华为Module Record
import { bar } from "./bar.js";

// 在阶段三中会求值这个函数 将求值计算的bar函数放到已经开辟好的内存地址中

// 所以说如下情况 这种代码在第三步运行阶段才知道运行结果 这种代码ESmoule是解析不了的
while (true) {
  import moduleName from "./a"; // 不能
  import("./bar"); // 可以
}

// 同时导出的模块可以重新赋值 导入的模块是不能更新变量的值的 (这种严格限制防止导出模块变量的改变 同时作为只读属性)
// 这是因为Module Record中会会保存着当前 Module Evironment Record(模块变量环境记录) 如果修改的变量不是来自属于自己模块的 就不允许修改
